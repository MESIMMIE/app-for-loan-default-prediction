# -*- coding: utf-8 -*-
"""train_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19kIGNmkb8Ct4Pe_qsGty0gKGHE89IAda
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import tensorflow as tf
from tensorflow import keras
import xgboost as xgb
import joblib

def train_model():
    df = pd.read_csv("/content/synthetic_data.csv")
    X = df.drop(columns=['TARGET', 'SK_ID_CURR'])
    y = df['TARGET']

    # Train-test split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Standardize data
    scaler = StandardScaler()
    X_train = scaler.fit_transform(X_train)
    X_test = scaler.transform(X_test)
    joblib.dump(scaler, "scaler.pkl")

    # Train Deep Learning model
    model = keras.Sequential([
        keras.layers.Dense(16, activation='relu', input_shape=(X_train.shape[1],)),
        keras.layers.Dense(8, activation='relu'),
        keras.layers.Dense(1, activation='sigmoid')
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
    model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_test, y_test))
    model.save("loan_default_model.h5")

    # Train XGBoost model
    xgb_model = xgb.XGBClassifier()
    xgb_model.fit(X_train, y_train)
    joblib.dump(xgb_model, "xgb_model.pkl")

    print("Models trained successfully. Saved as 'loan_default_model.h5' and 'xgb_model.pkl'.")

train_model()